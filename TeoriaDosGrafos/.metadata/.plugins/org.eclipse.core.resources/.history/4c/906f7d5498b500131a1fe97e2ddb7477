package AlgoritmoBusca;

import java.util.HashMap;
import java.util.Map;

import Utils.Strings;

public class VetorRoteamento {
	private Map<Vertice, ElementoVetorRoteamento> elementos;
	
	public VetorRoteamento(){
		this.elementos = new HashMap<Vertice, ElementoVetorRoteamento>();
	}
	public VetorRoteamento(Grafo grafo){
		this.elementos = new HashMap<Vertice, ElementoVetorRoteamento>();
		for(Vertice v : grafo.getVertices()){
			elementos.put(v, new ElementoVetorRoteamento());;
		}
	}
	public Map<Vertice, ElementoVetorRoteamento> getElementos() {
		return elementos;
	}
	public void setTempoVertice(Vertice v, Integer tempo) {
		ElementoVetorRoteamento elemento = elementos.containsKey(v)? elementos.get(v): new ElementoVetorRoteamento(null, tempo);
		elemento.setTempo(tempo);
		elementos.put(v, elemento);
	}

	public void setPaiVertice(Vertice v, Vertice vPai) {
		ElementoVetorRoteamento elemento = elementos.containsKey(v)? elementos.get(v): new ElementoVetorRoteamento(vPai, null);
		elemento.setVerticePai(vPai);
		elementos.put(v, elemento);
	}
	
	public String toString(){
		for(Vertice v : elementos.keySet()){
			System.out.print(Strings.leftPad(v.toString(), 8) + "|");
		}
		System.out.println();
		for(ElementoVetorRoteamento e : elementos.values()){
			System.out.print(e.getVerticePaiFormatado() + "  |");
		}
		System.out.println();
		for(ElementoVetorRoteamento e : elementos.values()){
			System.out.print(e.getTempoFormatado() + "âˆž" + "  |");
		}
		System.out.println();
		return "";
	}
	
	public static String padLeft(String s, int n) {
	    return String.format("%0$"+n+"s", s);
	  }
}
